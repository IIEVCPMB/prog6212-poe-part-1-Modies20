@using ContractMonthlyClaimSystem.Models
@model ContractMonthlyClaimSystem.Models.Claim

<div class="card mb-4">
    <div class="card-header bg-light">
        <h5 class="mb-0">Claim Status Tracking</h5>
    </div>
    <div class="card-body">
        <!-- Progress Bar -->
        <div class="mb-3">
            <div class="d-flex justify-content-between mb-1">
                <small>Submitted</small>
                <small>@Model.ProgressPercentage% Complete</small>
            </div>
            <div class="progress" style="height: 20px;">
                <div class="progress-bar @GetProgressBarClass(Model.Status)"
                     role="progressbar"
                     style="width: @Model.ProgressPercentage%;"
                     aria-valuenow="@Model.ProgressPercentage"
                     aria-valuemin="0"
                     aria-valuemax="100">
                    @Model.ProgressPercentage%
                </div>
            </div>
        </div>

        <!-- Status Timeline -->
        <div class="timeline">
            <div class="timeline-item @(Model.Status >= ClaimStatus.Submitted ? "completed" : "")">
                <div class="timeline-marker bg-success"></div>
                <div class="timeline-content">
                    <h6 class="mb-1">Claim Submitted</h6>
                    <small class="text-muted">@Model.SubmissionDate.ToString("dd MMM yyyy HH:mm")</small>
                </div>
            </div>

            <div class="timeline-item @(Model.Status >= ClaimStatus.ApprovedByCoordinator ? "completed" : "")">
                <div class="timeline-marker @(Model.Status >= ClaimStatus.ApprovedByCoordinator ? "bg-success" : "bg-secondary")"></div>
                <div class="timeline-content">
                    <h6 class="mb-1">Coordinator Review</h6>
                    @if (Model.Status >= ClaimStatus.ApprovedByCoordinator)
                    {
                        <small class="text-muted">Approved by @Model.CoordinatorApprovedBy on @Model.CoordinatorApprovalDate?.ToString("dd MMM yyyy HH:mm")</small>
                    }
                    else
                    {
                        <small class="text-muted">Pending coordinator review</small>
                    }
                </div>
            </div>

            <div class="timeline-item @(Model.Status >= ClaimStatus.ApprovedByManager ? "completed" : "")">
                <div class="timeline-marker @(Model.Status >= ClaimStatus.ApprovedByManager ? "bg-success" : "bg-secondary")"></div>
                <div class="timeline-content">
                    <h6 class="mb-1">Manager Approval</h6>
                    @if (Model.Status >= ClaimStatus.ApprovedByManager)
                    {
                        <small class="text-muted">Approved by @Model.ManagerApprovedBy on @Model.ManagerApprovalDate?.ToString("dd MMM yyyy HH:mm")</small>
                    }
                    else
                    {
                        <small class="text-muted">Pending manager approval</small>
                    }
                </div>
            </div>

            <div class="timeline-item @(Model.Status == ClaimStatus.Paid || Model.Status == ClaimStatus.Rejected ? "completed" : "")">
                <div class="timeline-marker @(Model.Status == ClaimStatus.Paid ? "bg-success" : Model.Status == ClaimStatus.Rejected ? "bg-danger" : "bg-secondary")"></div>
                <div class="timeline-content">
                    <h6 class="mb-1">@(Model.Status == ClaimStatus.Rejected ? "Claim Rejected" : "Payment Processed")</h6>
                    <small class="text-muted">@Model.ProgressStatus</small>
                </div>
            </div>
        </div>

        <!-- Current Status Badge -->
        <div class="mt-3 text-center">
            <span class="badge @GetStatusBadgeClass(Model.Status) fs-6 p-2">
                @Model.Status
            </span>
        </div>
    </div>
</div>

<style>
    .timeline {
        position: relative;
        padding-left: 30px;
    }

    .timeline-item {
        position: relative;
        margin-bottom: 20px;
    }

    .timeline-marker {
        position: absolute;
        left: -30px;
        top: 5px;
        width: 12px;
        height: 12px;
        border-radius: 50%;
    }

    .timeline-content {
        padding-left: 10px;
    }

    .timeline-item.completed .timeline-content {
        color: #28a745;
    }

    .progress-bar-submitted {
        background-color: #17a2b8;
    }

    .progress-bar-approved-coordinator {
        background-color: #ffc107;
    }

    .progress-bar-approved-manager {
        background-color: #28a745;
    }

    .progress-bar-paid {
        background-color: #20c997;
    }

    .progress-bar-rejected {
        background-color: #dc3545;
    }
</style>

@functions {
    string GetProgressBarClass(ContractMonthlyClaimSystem.Models.ClaimStatus status)
    {
        return status switch
        {
            ContractMonthlyClaimSystem.Models.ClaimStatus.Submitted => "progress-bar-submitted",
            ContractMonthlyClaimSystem.Models.ClaimStatus.ApprovedByCoordinator => "progress-bar-approved-coordinator",
            ContractMonthlyClaimSystem.Models.ClaimStatus.ApprovedByManager => "progress-bar-approved-manager",
            ContractMonthlyClaimSystem.Models.ClaimStatus.Paid => "progress-bar-paid",
            ContractMonthlyClaimSystem.Models.ClaimStatus.Rejected => "progress-bar-rejected",
            _ => "bg-secondary"
        };
    }

    string GetStatusBadgeClass(ContractMonthlyClaimSystem.Models.ClaimStatus status)
    {
        return status switch
        {
            ContractMonthlyClaimSystem.Models.ClaimStatus.Submitted => "bg-warning text-dark",
            ContractMonthlyClaimSystem.Models.ClaimStatus.ApprovedByCoordinator => "bg-info",
            ContractMonthlyClaimSystem.Models.ClaimStatus.ApprovedByManager => "bg-primary",
            ContractMonthlyClaimSystem.Models.ClaimStatus.Paid => "bg-success",
            ContractMonthlyClaimSystem.Models.ClaimStatus.Rejected => "bg-danger",
            _ => "bg-secondary"
        };
    }
}